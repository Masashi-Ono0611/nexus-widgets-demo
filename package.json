{
  "name": "toke-of-app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "eslint",
    "test:contracts": "hardhat test",
    "test:delayed-transfer": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-baseSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/verify/testDelayedTransfer.ts",
    "test:uniswap-v4-swap": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-baseSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/defi/uniswap/testUniswapV4Swap.ts",
    "deploy:auto-splitter": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-baseSepolia}} CONTRACT_NAME=AutoSplitter tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployContract.ts",
    "deploy:auto-transfer": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-baseSepolia}} CONTRACT_NAME=AutoTransfer tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployContract.ts",
    "deploy:aave-supply-splitter": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-baseSepolia}} CONTRACT_NAME=AaveSupplySplitter tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployContract.ts",
    "deploy:morpho-deposit-splitter": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-baseSepolia}} CONTRACT_NAME=MorphoDepositSplitter tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployContract.ts",
    "deploy:delayed-transfer": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-baseSepolia}} CONTRACT_NAME=DelayedTransfer tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployContract.ts",
    "deploy:flexible-splitter": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-arbitrumSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployFlexibleSplitter.ts",
    "test:flexible-splitter": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-arbitrumSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/verify/testFlexibleSplitter.ts",
    "deploy:recurring-splitter": "HARDHAT_NETWORK=arbitrumSepolia tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployRecurringSplitter.ts",
    "test:recurring-splitter": "HARDHAT_NETWORK=arbitrumSepolia tsx --tsconfig tsconfig.hardhat.json scripts/verify/testRecurringSplitter.ts",
    "check:recurring-schedule": "HARDHAT_NETWORK=arbitrumSepolia tsx --tsconfig tsconfig.hardhat.json scripts/schedule/checkRecurringSchedule.ts",
    "execute:recurring-schedule": "HARDHAT_NETWORK=arbitrumSepolia tsx --tsconfig tsconfig.hardhat.json scripts/schedule/executeRecurringSchedule.ts",
    "cancel:recurring-schedule": "HARDHAT_NETWORK=arbitrumSepolia tsx --tsconfig tsconfig.hardhat.json scripts/schedule/cancelRecurringSchedule.ts",
    "wrap-eth": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-baseSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/defi/wrapETH.ts",
    "deploy:swap-executor": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-arbitrumSepolia}} CONTRACT_NAME=SwapExecutor tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployContract.ts",
    "test:uniswap-v2-swap": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-arbitrumSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/defi/uniswap/testUniswapV2Swap.ts",
    "deploy:payroll-config-registry": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-arbitrumSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployPayrollConfigRegistry.ts",
    "test:payroll-config-registry": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-arbitrumSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/verify/testPayrollConfigRegistry.ts",
    "deploy:gifting-config-registry": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-arbitrumSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/deploy/deployGiftingConfigRegistry.ts",
    "test:gifting-config-registry": "HARDHAT_NETWORK=${HARDHAT_NETWORK:-${npm_config_network:-arbitrumSepolia}} tsx --tsconfig tsconfig.hardhat.json scripts/verify/testGiftingConfigRegistry.ts"
  },
  "dependencies": {
    "@avail-project/nexus-widgets": "^0.0.5",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-dialog": "^1.1.6",
    "@radix-ui/react-label": "2.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-slot": "^1.1.2",
    "@radix-ui/react-switch": "^1.2.6",
    "@rainbow-me/rainbowkit": "2.2.9",
    "@tanstack/react-query": "^5.90.5",
    "@walletconnect/ethereum-provider": "^2.22.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.546.0",
    "next": "14.2.14",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "sonner": "^2.0.7",
    "tailwind-merge": "^3.3.1",
    "viem": "2.38.4",
    "wagmi": "2.18.2"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@gelatonetwork/automate-sdk": "^3.1.0",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.10",
    "@nomicfoundation/hardhat-toolbox": "^5.0.0",
    "@openzeppelin/contracts": "^5.1.0",
    "@tailwindcss/typography": "^0.5.19",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "autoprefixer": "^10.4.21",
    "chai": "^4.5.0",
    "dotenv": "^16.4.5",
    "eslint": "^8.57.1",
    "eslint-config-next": "14.2.14",
    "ethers": "^6.15.0",
    "hardhat": "^2.26.3",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.18",
    "tsx": "^4.20.6",
    "typescript": "^5.6.3"
  }
}
